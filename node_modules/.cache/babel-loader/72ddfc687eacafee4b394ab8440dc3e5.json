{"ast":null,"code":"import _objectSpread from\"/Users/kajiwararei/Desktop/Code/react-todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/kajiwararei/Desktop/Code/react-todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/kajiwararei/Desktop/Code/react-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{nanoid}from\"nanoid\";import Form from\"./components/Form\";import FilterButton from\"./components/FilterButton\";import Todo from\"./components/Todo\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FILTER_MAP={All:function All(){return true;},Active:function Active(task){return!task.completed;},Completed:function Completed(task){return task.completed;}};var FILTER_NAMES=Object.keys(FILTER_MAP);function App(props){var _useState=useState(props.tasks),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState('All'),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];function addTask(name){var newTask={id:\"todo-\"+nanoid(),name:name,completed:false};setTasks([].concat(_toConsumableArray(tasks),[newTask]));}function toggleTaskCompleted(id){var updatedTasks=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){// use object spread to make a new object\n// whose `completed` prop has been inverted\nreturn _objectSpread(_objectSpread({},task),{},{completed:!task.completed});}return task;});setTasks(updatedTasks);}function editTask(id,newName){var editedTaskList=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){return _objectSpread(_objectSpread({},task),{},{name:newName});}return task;});setTasks(editedTaskList);}function deleteTask(id){var remainingTasks=tasks.filter(function(task){return id!==task.id;});setTasks(remainingTasks);}var taskList=tasks.filter(FILTER_MAP[filter]).map(function(task){return/*#__PURE__*/_jsx(Todo,{id:task.id,name:task.name,completed:task.completed,toggleTaskCompleted:toggleTaskCompleted,deleteTask:deleteTask,editTask:editTask},task.id);});var filterList=FILTER_NAMES.map(function(name){return/*#__PURE__*/_jsx(FilterButton,{name:name,isPressed:name===filter,setFilter:setFilter},name);});var tasksNoun=taskList.length!==1?'tasks':'task';var headingText=\"\".concat(taskList.length,\" \").concat(tasksNoun,\" remaining\");return/*#__PURE__*/_jsxs(\"div\",{className:\"todoapp stack-large\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Todo List\"}),/*#__PURE__*/_jsx(\"h2\",{children:\" created with React\"}),/*#__PURE__*/_jsx(Form,{addTask:addTask}),/*#__PURE__*/_jsx(\"div\",{className:\"filters btn-group stack-exception\",children:filterList}),/*#__PURE__*/_jsx(\"h2\",{id:\"list-heading\",children:headingText}),/*#__PURE__*/_jsx(\"ul\",{role:\"list\",className:\"todo-list stack-large stack-exception\",\"aria-labelledby\":\"list-heading\",children:taskList})]});}export default App;","map":{"version":3,"sources":["/Users/kajiwararei/Desktop/Code/react-todo/src/App.js"],"names":["React","useState","nanoid","Form","FilterButton","Todo","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","addTask","name","newTask","id","toggleTaskCompleted","updatedTasks","map","editTask","newName","editedTaskList","deleteTask","remainingTasks","taskList","filterList","tasksNoun","length","headingText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  \n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  \n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }  \n  \n  \n  const taskList = tasks\n      .filter(FILTER_MAP[filter])\n      .map(task => (\n        <Todo\n          id={task.id}\n          name={task.name}\n          completed={task.completed}\n          key={task.id}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          editTask={editTask}\n        />\n    ));\n\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n  \n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo List</h1>\n      <h2> created with React</h2>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}