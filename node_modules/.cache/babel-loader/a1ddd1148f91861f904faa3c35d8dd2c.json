{"ast":null,"code":"var _jsxFileName = \"/Users/kajiwararei/Desktop/Code/react-todo/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  const [name, setName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(\"Say hello!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-input\",\n        className: \"label__lg\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"new-todo-input\",\n      className: \"input input__lg\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary btn__lg\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/kajiwararei/Desktop/Code/react-todo/src/components/Form.js"],"names":["React","useState","Form","props","handleChange","e","setName","target","value","name","handleSubmit","preventDefault","addTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBC,IAAAA,OAAO,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACD;;AAEH,QAAM,CAACC,IAAD,EAAOH,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASS,YAAT,CAAsBL,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACM,cAAF;AACAR,IAAAA,KAAK,CAACS,OAAN,CAAc,YAAd;AACD;;AAEH,sBACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,6BACI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAgC,QAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,gBAFP;AAGI,MAAA,SAAS,EAAC,iBAHd;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,KAAK,EAAED,IANX;AAOI,MAAA,QAAQ,EAAEL;AAPd;AAAA;AAAA;AAAA;AAAA,YANJ,eAgBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAlCuBF,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Form(props) {\n    function handleChange(e) {\n        setName(e.target.value);\n      }      \n      \n    const [name, setName] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(\"Say hello!\");\n      }  \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 className=\"label-wrapper\">\n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n                What needs to be done?\n                </label>\n            </h2>\n            <input\n                type=\"text\"\n                id=\"new-todo-input\"\n                className=\"input input__lg\"\n                name=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={handleChange}\n            />\n\n            <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n                Add\n            </button>\n        </form>\n    );\n}"]},"metadata":{},"sourceType":"module"}